README

build:
	go build [--tags='noaudio nobuttons']

required packages
	portaudio19-dev
	libmpg123-dev
  python-smbus
  i2c-tools

running as a service
	not working great yet, directories are tricky, simulations are hard, etc.

pi setup:
  /boot/ssh to enable ssh default
  reset password
  set TZ/keyboard/I2C/GPU to 16M (opt)
  set hostname
  ssh-keygen, copy to AU
  add local pubkey to authkeys
  (TODO: break these into git/vim and post-git clone) 
    install: vim git portaudio19-dev libmpg123-dev golang
  git clone
  * if using 256M board *
    add USB as sda
    sudo mkswap /dev/sda
    sudo swapon /dev/sda
    (for git shallow clone) 
    git clone github.com/schollz/git && go build && PATH=$GOPATH/bin:$PATH 
  go get ./... + go build
  (TODO: make a web page for configuring the gcal api)
    configure the gapi token file in ~/.credentials in the web page
    form: run configure from web, redirect back to (here), save OAUTH token
  (TODO: service install script)
  (TODO: scripted test setup)
  
TODO:
  add simulation program for testing
  
tests:
  load old alarms
    all valid
    some expired
    none
  
  simlated alarms
    time display
    alarm countdown
    song play triggered
    button cancel countdown
    button cancel song
  
  reload button
